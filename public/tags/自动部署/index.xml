<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>自动部署 on ColorfulDark Blog</title>
    <link>https://www.harddone.com/tags/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</link>
    <description>Recent content in 自动部署 on ColorfulDark Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 25 Apr 2019 11:13:24 +0800</lastBuildDate><atom:link href="https://www.harddone.com/tags/%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（三）</title>
      <link>https://www.harddone.com/post/hugo_nginx_3/</link>
      <pubDate>Thu, 25 Apr 2019 11:13:24 +0800</pubDate>
      
      <guid>https://www.harddone.com/post/hugo_nginx_3/</guid>
      <description>前篇提要 在上一篇中，我们主要介绍了服务器的环境安装。在本文中，我们将就具体的操作步骤加以说明并截图展示。 利用 Hugo 生成静态网站 1. 创建项目目录 在您本地合适的目录下创建一个空文件夹，命名为 BlogTest, 为了方便之后的命令行演示，我们假设刚才创建的目录完整路径为： /xxx/xxx/xxx/BlogTest 2. 新建网站 打开终端执行Hugo命令，</description>
    </item>
    
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（二）</title>
      <link>https://www.harddone.com/post/hugo_nginx_2/</link>
      <pubDate>Thu, 25 Apr 2019 05:13:24 +0800</pubDate>
      
      <guid>https://www.harddone.com/post/hugo_nginx_2/</guid>
      <description>前篇提要 在上一篇文章，我们详细记录了如何购买阿里云服务器的步骤和搭建博客网站的部分准备工作。本文将继续记录安装服务器环境的步骤。 服务器软件环境安装 1. 安装git sudo yum install git 2. 安装Nginx Nginx是一个高性能的web服务器软件。它是一个比apache更灵活和轻量级的程序。 第一步 - 安装</description>
    </item>
    
    <item>
      <title>Hugo&#43;Nginx： 利用webhook自动部署静态网站到远程CentOS服务器（一）</title>
      <link>https://www.harddone.com/post/hugo_nginx_1/</link>
      <pubDate>Wed, 24 Apr 2019 11:13:24 +0800</pubDate>
      
      <guid>https://www.harddone.com/post/hugo_nginx_1/</guid>
      <description>概述 最近心血来潮想捣腾一下服务器方面的东西，一冲动在阿里云买了一台小小云服务器(HongKong)(推荐链接)（5年，算下来真是比买一个国外的VPS划算得太多，关键是响应速度超级完美，看图），想来搭个博文网站练（zhuang)练(zhuang)手(bi)，也是不错的。 既然练练手，</description>
    </item>
    
  </channel>
</rss>
